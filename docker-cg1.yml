variant: fcos
version: 1.1.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDD1boyNeRqsAttjgkCmIgu87YpuYG/sr0CLoVq4Ou4gK4P/jZFCiHFZdz+RE+0ZjqRdSrcLIz8MZZre6DvPLNSyvX30duSv4rXWd+9IRRWrDbneJ3jbQbLUnM8gZclSVCYc55r/rSjM3M4IlET1x4+rZ1+ochpLT9emA9AtFUgUxxBG3ee43O07uGwUHigUOb1AiXqnaYdo9vqte1U4IUwiZIVseTszmyDaP4Uz/VCw6Vl9+OaZPvZvE6/hBwWOrv8sklBYdqZUJSI3zpy4ZvHnW7wVqqMRUh1hpf1+NVNyUDtdYzxKuOxs2sjUC+nc6qOcnythKnbcHbgbA6y8mFEp+JkfrGBx4PcnrFpOSGLeiSQiEM51yOJ+qocWA2OxO7pA+o1AGm+WjURl1Ni2THMtpzahcECJXzi9+jibSt9cJEr8oxjVfG59+/E8q9zJHdN4eqrfpanyL0fofi1kfZUPkG+LelRxfUZSbEtM5pL+Rk1g+aAaFlAdhDyNQvg8zM= aoei@djanseriy
      groups:
        - docker
        - wheel
systemd:
  units:
    - name: serial-getty@ttyS0.service
      dropins:
      - name: autologin-core.conf
        contents: |
          [Service]
          # Override Execstart in main unit
          ExecStart=
          # Add new Execstart with `-` prefix to ignore failure
          ExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM
          TTYVTDisallocate=no
    - name: nhdb-init-auth.service
      enabled: true
      contents: |
        [Unit]
        Description=Assign database passwords and fetch/trust my GPG key
        After=dbus.target
        Requires=user@1000.service
        Requires=docker.service
        ConditionPathExists=!/var/lib/nhs-auth-gen

        [Service]
        User=core
        Type=oneshot
        ExecStart=/usr/local/bin/init-auth-tokens.sh
        ExecStartPost=/usr/bin/touch /var/lib/nhs-auth-gen
        RemainAfterExit=yes

        [Install]
        RequiredBy=nhdb.service
    - name: nhdb.service
      enabled: true
      contents: |
        [Unit]
        Description=Run NHDB database in a postgres container
        After=nhdb-init-auth.service
        Requires=nhdb-init-auth.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill nhdb
        ExecStartPre=-/usr/bin/docker rm nhdb
        ExecStartPre=/usr/bin/docker network create nhdb-net
        ExecStartPre=/usr/bin/docker pull seadog:5000/nhdb:testing
        ExecStart=/usr/bin/docker run --net nhdb-net -h nhdb-pghost \
                        -v "/var/run/secrets/nhdb:/run/secrets:ro" nhdb
        ExecStop=/usr/bin/docker stop nhdb

        [Install]
        WantedBy=multi-user.target
    - name: nhdb-feeder.service
      contents: |
        [Unit]
        Description=Run nhdb-feeder - NHS database back-end xlog aggregator
        Requires=nhdb.service
        After=nhdb.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill nhdb-feeder
        ExecStartPre=-/usr/bin/docker rm nhdb-feeder
        ExecStartPre=/usr/bin/docker pull seadog:5000/nhdb-feeder:testing
        ExecStart=/usr/bin/docker run --net nhdb-net \
                  -v "/var/run/secrets/nhdb:/run/secrets:ro" nhdb-feeder
        ExecStop=/usr/bin/docker stop nhdb-feeder
    - name: nhdb-feeder.timer
      enabled: true
      contents: |
        [Unit]
        Description=Timer to activate the database aggregator once per hour

        [Timer]
        OnBootSec=30min
        OnUnitActiveSec=60min

        [Install]
        WantedBy=multi-user.target
    - name: nhdb-mojo.service
      enabled: true
      contents: |
        [Unit]
        Description=Run nhdb-mojo - NHS database Mojolicious Web Frontend
        After=nhdb.service
        Requires=nhdb.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill nhdb-mojo
        ExecStartPre=-/usr/bin/docker rm nhdb-mojo
        ExecStartPre=/usr/bin/docker pull seadog:5000/nhdb-mojo:testing
        ExecStart=/usr/bin/docker run --net nhdb-net -p 8080/tcp \
                  -v "/var/run/secrets/nhdb:/run/secrets:ro" nhdb-mojo
        ExecStop=/usr/bin/docker stop nhdb-mojo

        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /usr/local/bin/init-auth-tokens.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          git clone -b separate-image-build --depth 1 https://github.com/aoeixsz4/nhs-fork.git /tmp/nhs-git
          cd /tmp/nhs-git
          export secrets=/var/run/secrets/nhdb
          sudo ./setup.sh --secrets-only
          chown -R root:root $secrets
          sudo chmod -R u+rw,go-rwx $secrets
          cd /tmp
          rm -rf nhs-git

          systemctl --user list-unit-files >~/systemctl-units.log 2>&1

          # initialise some gpg stuff, bit hacky but I can't
          # seem to get user services to start by enabling in the yaml
          mkdir -p ~/.gnupg
          echo keyserver hkps://keys.openpgp.org/ >>~/.gnupg/dirmngr.conf
          systemctl --user enable dirmngr.socket
          systemctl --user enable gpg-agent.socket
          systemctl --user start dirmngr.service
          systemctl --user start gpg-agent.service

          while $[[ $i -le 10 ]]; do
                gpg --receive-keys C014E4ECC9EC432F && break
                i=$(($i + 1))
          done
          gpg --export --armor --output joanna.asc jjadoyle@gmail.com
          if [[ $? -ne 0 ]]; then
                echo "gpg --receive-keys failed 10 times" >&2
                exit 1
          fi
          
          echo "10.156.0.20    seadog" | sudo tee -a /etc/hosts
          docker trust signer add joanna seadog:5000/nhdb
          docker trust signer add joanna seadog:5000/nhdb-feeder
          docker trust signer add joanna seadog:5000/nhdb-mojo
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          kizul
    - path: /etc/profile.d/systemd-pager.sh
      mode: 0644
      contents:
        inline: |
          # Tell systemd to not use a pager when printing information
          export SYSTEMD_PAGER=cat
    - path: /etc/sysctl.d/20-silence-audit.conf
      mode: 0644
      contents:
        inline: |
          # Raise console message logging level from DEBUG (7) to WARNING (4)
          # to hide audit messages from the interactive console
          kernel.printk=4
    - path: /etc/sysctl.d/30-docker-bridge.conf
      mode: 0644
      contents:
        inline: |
          # in order for docker containers in a bridge network to
          # forward ports to the host system, we need this on
          net.ipv4.conf.all.forwarding=1
