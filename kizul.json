{
  "ignition": {
    "version": "3.1.0"
  },
  "passwd": {
    "users": [
      {
        "groups": [
          "docker",
          "wheel"
        ],
        "name": "core",
        "sshAuthorizedKeys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDD1boyNeRqsAttjgkCmIgu87YpuYG/sr0CLoVq4Ou4gK4P/jZFCiHFZdz+RE+0ZjqRdSrcLIz8MZZre6DvPLNSyvX30duSv4rXWd+9IRRWrDbneJ3jbQbLUnM8gZclSVCYc55r/rSjM3M4IlET1x4+rZ1+ochpLT9emA9AtFUgUxxBG3ee43O07uGwUHigUOb1AiXqnaYdo9vqte1U4IUwiZIVseTszmyDaP4Uz/VCw6Vl9+OaZPvZvE6/hBwWOrv8sklBYdqZUJSI3zpy4ZvHnW7wVqqMRUh1hpf1+NVNyUDtdYzxKuOxs2sjUC+nc6qOcnythKnbcHbgbA6y8mFEp+JkfrGBx4PcnrFpOSGLeiSQiEM51yOJ+qocWA2OxO7pA+o1AGm+WjURl1Ni2THMtpzahcECJXzi9+jibSt9cJEr8oxjVfG59+/E8q9zJHdN4eqrfpanyL0fofi1kfZUPkG+LelRxfUZSbEtM5pL+Rk1g+aAaFlAdhDyNQvg8zM= aoei@djanseriy"
        ]
      }
    ]
  },
  "storage": {
    "files": [
      {
        "path": "/usr/local/bin/nhs-fetch.sh",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/3SMS6rDMAxF516FHm9si0JHhS7GHyU2+chISghdfUnppIVO77nn/P9haiumqNUtU2kCvu+AmwrOnOOMexQ3NoM880rgE6xVfeE8kfghs4L3hbpVuEA163pDHJvVLYXMC0amdujjiqc1sEzhbH3mX2xs5nL5RejoLAZKWcj0/vV6zy6gkm09aHXPAAAA//+Ofm7w1wAAAA=="
        },
        "mode": 493
      },
      {
        "path": "/etc/containers/mounts.conf",
        "contents": {
          "source": "data:,%2Fusr%2Flocal%2Fvar%2Fsecrets%3A%2Frun%2Fsecrets%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/hostname",
        "contents": {
          "source": "data:,kizul%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/profile.d/systemd-pager.sh",
        "contents": {
          "source": "data:,%23%20Tell%20systemd%20to%20not%20use%20a%20pager%20when%20printing%20information%0Aexport%20SYSTEMD_PAGER%3Dcat%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/sysctl.d/20-silence-audit.conf",
        "contents": {
          "source": "data:,%23%20Raise%20console%20message%20logging%20level%20from%20DEBUG%20(7)%20to%20WARNING%20(4)%0A%23%20to%20hide%20audit%20messages%20from%20the%20interactive%20console%0Akernel.printk%3D4%0A"
        },
        "mode": 420
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "dropins": [
          {
            "contents": "[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I rxvt-unicode-256color\nTTYVTDisallocate=no\n",
            "name": "autologin-core.conf"
          }
        ],
        "name": "serial-getty@ttyS0.service"
      },
      {
        "contents": "[Unit]\nDescription=Fetch git repo for everything that is NHS\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/nhs-fetch.sh\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "nhdb-setup.service"
      },
      {
        "contents": "[Unit]\nDescription=Run nhdb - NHDB database in a postgres container\nAfter=network-online.target\nWants=nhdb-setup.service\n\n[Service]\nUser=core\nExecStartPre=-/usr/bin/docker kill nhdb\nExecStartPre=-/usr/bin/docker rm nhdb\nExecStartPre=-/usr/bin/docker build -t nhdb:testing /usr/local/pods/postgres\nExecStartPre=-/usr/bin/docker pod create -n nhdb-pod -p 8080:8080/tcp\nExecStart=/usr/bin/docker run --env POSTGRES_DB=nhdb --env POSTGRES_PASSWORD_FILE=/run/secrets/nhdb/root --env POSTGRES_USER=nhdb --name nhdb \\\n                          --volume nhdb-vol:/var/lib/postgresql/data/pgdata:rw --pod nhdb-pod \\\n                          nhdb:testing postgres -c log_statement=none \\\n                          -c checkpoint_completion_target=0.9\nExecStop=/usr/bin/docker stop nhdb\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "nhdb.service"
      },
      {
        "contents": "[Unit]\nDescription=Run nhdb-feeder - NHS database back-end xlog aggregator\n\n[Service]\nUser=core\nExecStartPre=-/usr/bin/docker kill nhdb-feeder\nExecStartPre=-/usr/bin/docker rm nhdb-feeder\nExecStartPre=-/usr/bin/docker build -t nhdb-feeder:testing /usr/local/pods/feeder\nExecStart=/usr/bin/docker run --env PERL5LIB=/cpan/lib/perl5 -v /usr/local/run:/nhs:ro \\\n                          --pod nhdb-pod -v xlog-vol:/var/log/xlog:rw \\\n                          --name nhdb-feeder nhdb-feeder:testing \\\n                          ./nhdb-feeder.pl\nExecStop=/usr/bin/docker stop nhdb-feeder\n",
        "name": "nhdb-feeder.service"
      },
      {
        "contents": "[Unit]\nDescription=Timer to activate the database aggregator once per hour\n\n[Timer]\nOnBootSec=30min\nOnUnitActiveSec=60min\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "nhdb-feeder.timer"
      },
      {
        "contents": "[Unit]\nDescription=Run nhdb-mojo - NHS database Mojolicious Web Frontend\nAfter=network-online.target\nWants=nhdb.service\n\n[Service]\nUser=core\nExecStartPre=-/usr/bin/docker kill nhdb-mojo\nExecStartPre=-/usr/bin/docker rm nhdb-mojo\nExecStartPre=-/usr/bin/docker build -t nhdb-mojo:testing /usr/local/pods/mojo\nExecStart=/usr/bin/docker run --env PERL5LIB=/cpan/lib/perl5 -v /usr/local/run/public:/nhs/public:ro \\\n                          --env  --pod nhdb-pod \\\n                          --name nhdb-mojo nhdb-mojo:testing \\\n                          morbo --listen http://*:8080 script/nhs\nExecStop=/usr/bin/docker stop nhdb-mojo\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "nhdb-mojo.service"
      }
    ]
  }
}
